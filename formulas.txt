some conversions-

fahrenheit to celsius
C= (F- 32)*(5/9)

celsius to fahrenheit  
F=(9/5)*C+32

Miles to KM
km = M *1.609

Simple interest
SI= (p*r*t)/100


2's power of a number:
public class PowerOfNumber2 {  
    public static void main(String[] args) {  
        int base = 2;  
        int exponent = 3;  
        int result = 1;  
        int power=3;  
        while (exponent > 0) {  
            result *= base;  
            exponent--;  
        }  
        System.out.println(base + " raised to the power of " + power + " is " + result);  
    }  
}  

OR
double result = Math.pow(base, exponent); 


Compare two strings lexicographically:
 int result = str1.compareTo(str2);

        // Display the results of the comparison.
        if (result < 0) {
            // If the result is less than 0, print that the first string is less than the second.
            return str2;
        } else if (result == 0) {
            // If the result is 0, print that the first string is equal to the second.
            return "equal");
        } else { // if (result > 0)
            // If the result is greater than 0, print that the first string is greater than the second.
            return str1;
        }

OR

// This method compares two strings  
    // lexicographically without using  
    // library functions  
    public static int stringCompare(String str1,  
                                    String str2)  
    {  
        for (int i = 0; i < str1.length() &&  
                    i < str2.length(); i++) {  
            if ((int)str1.charAt(i) ==  
                (int)str2.charAt(i)) {  
                continue;  
            }  
            else {  
                return (int)str1.charAt(i) -  
                    (int)str2.charAt(i);  
            }  
        }  
  
        // Edge case for strings like  
        // String 1="Geeky" and String 2="Geekyguy"  
        if (str1.length() < str2.length()) {  
            return (str1.length()-str2.length());  
        }  
        else if (str1.length() > str2.length()) {  
            return (str1.length()-str2.length());  
        }  
          
        // If none of the above conditions is true,  
        // it implies both the strings are equal  
        else {  
            return 0;  
        }  
    }  

Counting vowels in a word:
        String str = "GeeksForGeeks";
        str = str.toLowerCase();
        int count = 0;
 
        for (int i = 0; i < str.length(); i++) {
            // check if char[i] is vowel
            if (str.charAt(i) == 'a' || str.charAt(i) == 'e'
                || str.charAt(i) == 'i'
                || str.charAt(i) == 'o'
                || str.charAt(i) == 'u') {
                // count increments if there is vowel in
                // char[i]
                count++;
            }
        }

Factorial of a number:
int i,fact=1;  
  int number=5;//It is the number to calculate factorial    
  for(i=1;i<=number;i++){    
      fact=fact*i;    
  }   
  
  
  
  
  
  
  
  assignment 7 : 
Client Servlet Server
DS-7
	1. Create a JAVA WEB, WEB APPLICATION Project. And GlassFish 4.1.1
	2. Add WEB SERVICE to it. (say CalculatorWebService) after creating project
	3. Test it by (Clean an Build). Deploy. Test Web Service
	4. Create another project for WebServiceClient same as above !!
	for consuming:
	5. Add form tag (action as "CalculatorServlet"), input tag, and submit(input tag with Submit type)
	6. Now need to add our calculator service to client as:
		right click on client vala project. Add new WEB SERVICE CLIENT.
		inside that browse project of calculatorWebService. and select that created
		web service for calculator (Server we can say)!! Now we get the reference of Server
		in client !!
	7. Now neded to create a CalculatorServlet. Who will accept the request from client (form):
		Right click on client project. Add new SERVLET and give name as same which we have
		written in action attribute inside form tag. click next. check the check box for deployment.
		click on finish. The Servlet file will be opened. This file will thw output file.
		 
		Now need to add the methods which are in reference in clientService inside this servlet file.
	8. Now need to add the methods which are in reference in clientService inside this servlet file.
            For that, drag and drop those referenced methods (each inside that servlet file)
	9. Fetch the numbers/input from the form in servlet page to perform operations using:
		request.getParameter("name_of_paramter_used_in_form"), this method returns string
		bydefault. if need to fetch double values need to typecast it! -> Double.parseDouble();
	10. Use the method name directly inside the servlet file (inside h1 tag; default je asel te change kr)
	      like add, divide, etc. and pass the parameters fetched from request!!
	11. Cleand and build the client project
	12. Run the file in which we have written form tags (client's index.js)
